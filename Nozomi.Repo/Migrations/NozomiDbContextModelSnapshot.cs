// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nozomi.Repo.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Nozomi.Repo.Migrations
{
    [DbContext(typeof(NozomiDbContext))]
    partial class NozomiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Nozomi.Data.Models.Currency.Currency", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Abbreviation")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<long>("CurrencyTypeId");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<string>("DenominationName");

                    b.Property<int>("Denominations")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Description");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<long>("WalletTypeId");

                    b.HasKey("Id")
                        .HasName("Currency_PK_Id");

                    b.HasIndex("Abbreviation")
                        .IsUnique()
                        .HasName("Currency_Index_Abbreviation");

                    b.HasIndex("CurrencyTypeId");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Abbreviation = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 1L,
                            DeletedBy = 0L,
                            Denominations = 0,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "United States Dollar",
                            WalletTypeId = 0L
                        },
                        new
                        {
                            Id = 2L,
                            Abbreviation = "EUR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 1L,
                            DeletedBy = 0L,
                            Denominations = 0,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Euro",
                            WalletTypeId = 0L
                        },
                        new
                        {
                            Id = 3L,
                            Abbreviation = "ETH",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 2L,
                            DeletedBy = 0L,
                            DenominationName = "Wei",
                            Denominations = 18,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Ethereum",
                            WalletTypeId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Abbreviation = "KNC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 2L,
                            DeletedBy = 0L,
                            Denominations = 18,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Kyber Network Crystal",
                            WalletTypeId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Abbreviation = "BTC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 2L,
                            DeletedBy = 0L,
                            DenominationName = "Sat",
                            Denominations = 8,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Bitcoin",
                            WalletTypeId = 0L
                        },
                        new
                        {
                            Id = 6L,
                            Abbreviation = "BCN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 2L,
                            DeletedBy = 0L,
                            Denominations = 0,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Bytecoin",
                            WalletTypeId = 0L
                        },
                        new
                        {
                            Id = 7L,
                            Abbreviation = "BTS",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 2L,
                            DeletedBy = 0L,
                            Denominations = 0,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "BitShares",
                            WalletTypeId = 0L
                        },
                        new
                        {
                            Id = 8L,
                            Abbreviation = "USDT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 1L,
                            DeletedBy = 0L,
                            Denominations = 0,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Tether USD",
                            WalletTypeId = 0L
                        },
                        new
                        {
                            Id = 9L,
                            Abbreviation = "SGD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 1L,
                            DeletedBy = 0L,
                            Denominations = 0,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Singapore Dollar",
                            WalletTypeId = 0L
                        },
                        new
                        {
                            Id = 10L,
                            Abbreviation = "LTC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyTypeId = 2L,
                            DeletedBy = 0L,
                            Denominations = 0,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Litecoin",
                            WalletTypeId = 0L
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.CurrencyPair", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("APIUrl")
                        .IsRequired();

                    b.Property<string>("CounterCurrencyAbbrv")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<int>("CurrencyPairType");

                    b.Property<string>("DefaultComponent")
                        .IsRequired();

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("MainCurrencyAbbrv")
                        .IsRequired();

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<long>("SourceId");

                    b.HasKey("Id")
                        .HasName("CurrencyPair_PK_Id");

                    b.HasAlternateKey("MainCurrencyAbbrv", "CounterCurrencyAbbrv", "SourceId")
                        .HasName("CurrencyPair_AK_MainCurrency_CounterCurrency_Source");

                    b.HasIndex("SourceId");

                    b.ToTable("CurrencyPairs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            APIUrl = "https://api.ethfinex.com/v2/ticker/tETHUSD",
                            CounterCurrencyAbbrv = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 1,
                            DefaultComponent = "0",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "ETH",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            APIUrl = "https://api.ethfinex.com/v2/ticker/tKNCUSD",
                            CounterCurrencyAbbrv = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 1,
                            DefaultComponent = "0",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "KNC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            APIUrl = "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml",
                            CounterCurrencyAbbrv = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 1,
                            DefaultComponent = "Cube",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "EUR",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 4L
                        },
                        new
                        {
                            Id = 4L,
                            APIUrl = "https://www.alphavantage.co/query",
                            CounterCurrencyAbbrv = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 1,
                            DefaultComponent = "Realtime Currency Exchange Rate/5. Exchange Rate",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "EUR",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 5L
                        },
                        new
                        {
                            Id = 5L,
                            APIUrl = "https://poloniex.com/public?command=returnTicker",
                            CounterCurrencyAbbrv = "BCN",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "BTC_BCN/lowestAsk",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "BTC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 6L
                        },
                        new
                        {
                            Id = 6L,
                            APIUrl = "https://poloniex.com/public?command=returnTicker",
                            CounterCurrencyAbbrv = "BTS",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "BTC_BTS/lowestAsk",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "BTC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 6L
                        },
                        new
                        {
                            Id = 7L,
                            APIUrl = "https://api.bitfinex.com/v1/pubticker/etheur",
                            CounterCurrencyAbbrv = "EUR",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 1,
                            DefaultComponent = "0",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "ETH",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            APIUrl = "https://poloniex.com/public?command=returnTicker",
                            CounterCurrencyAbbrv = "USDT",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "USDT_BTC/lowestAsk",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "BTC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 6L
                        },
                        new
                        {
                            Id = 9L,
                            APIUrl = "wss://stream.binance.com:9443/stream?streams=!ticker@arr",
                            CounterCurrencyAbbrv = "BTC",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "b",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "ETH",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 10L,
                            APIUrl = "wss://stream.binance.com:9443/stream?streams=!ticker@arr",
                            CounterCurrencyAbbrv = "ETH",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "b",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "KNC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 11L,
                            APIUrl = "https://www.coinhako.com/api/v1/price/currency/BTCSGD",
                            CounterCurrencyAbbrv = "SGD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "data/buy_price",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "BTC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 12L,
                            APIUrl = "https://www.coinhako.com/api/v1/price/currency/BTCUSD",
                            CounterCurrencyAbbrv = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "data/buy_price",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "BTC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 13L,
                            APIUrl = "https://www.coinhako.com/api/v1/price/currency/ETHSGD",
                            CounterCurrencyAbbrv = "SGD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "data/buy_price",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "ETH",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 14L,
                            APIUrl = "https://www.coinhako.com/api/v1/price/currency/ETHUSD",
                            CounterCurrencyAbbrv = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "data/buy_price",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "ETH",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 15L,
                            APIUrl = "https://www.coinhako.com/api/v1/price/currency/LTCSGD",
                            CounterCurrencyAbbrv = "SGD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "data/buy_price",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "LTC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 16L,
                            APIUrl = "https://www.coinhako.com/api/v1/price/currency/LTCUSD",
                            CounterCurrencyAbbrv = "USD",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            CurrencyPairType = 2,
                            DefaultComponent = "data/buy_price",
                            DeletedBy = 0L,
                            IsEnabled = true,
                            MainCurrencyAbbrv = "LTC",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.CurrencyProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<long>("CurrencyId");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<int>("Type");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyProperty");
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.CurrencySource", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<long>("CurrencyId");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<long>("SourceId");

                    b.HasKey("Id")
                        .HasName("CurrencySource_PK_Id");

                    b.HasIndex("SourceId");

                    b.HasIndex("CurrencyId", "SourceId")
                        .IsUnique()
                        .HasName("CurrencySource_CK_CurrencyId_SourceId");

                    b.ToTable("CurrencySources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(7260),
                            CreatedBy = 0L,
                            CurrencyId = 1L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(7260),
                            ModifiedBy = 0L,
                            SourceId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8010),
                            CreatedBy = 0L,
                            CurrencyId = 2L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8010),
                            ModifiedBy = 0L,
                            SourceId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            ModifiedBy = 0L,
                            SourceId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            CreatedBy = 0L,
                            CurrencyId = 4L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            ModifiedBy = 0L,
                            SourceId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            CreatedBy = 0L,
                            CurrencyId = 4L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8020),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 5L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 3L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 2L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 1L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 4L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 2L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 1L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 5L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 5L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 6L
                        },
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 6L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 6L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            CreatedBy = 0L,
                            CurrencyId = 7L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8030),
                            ModifiedBy = 0L,
                            SourceId = 6L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            CreatedBy = 0L,
                            CurrencyId = 8L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            ModifiedBy = 0L,
                            SourceId = 6L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            CreatedBy = 0L,
                            CurrencyId = 5L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            ModifiedBy = 0L,
                            SourceId = 2L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            CreatedBy = 0L,
                            CurrencyId = 9L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            ModifiedBy = 0L,
                            SourceId = 2L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            CreatedBy = 0L,
                            CurrencyId = 6L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            ModifiedBy = 0L,
                            SourceId = 2L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            CreatedBy = 0L,
                            CurrencyId = 1L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            ModifiedBy = 0L,
                            SourceId = 2L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            CreatedBy = 0L,
                            CurrencyId = 10L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 82, DateTimeKind.Utc).AddTicks(8040),
                            ModifiedBy = 0L,
                            SourceId = 2L
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.CurrencyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("TypeShortForm")
                        .IsRequired()
                        .HasMaxLength(12);

                    b.HasKey("Id")
                        .HasName("CurrencyType_PK_Id");

                    b.ToTable("CurrencyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "FIAT Cash",
                            TypeShortForm = "FIAT"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Cryptocurrency",
                            TypeShortForm = "CRYPTO"
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.Source", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("APIDocsURL");

                    b.Property<string>("Abbreviation")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("Source_PK_Id");

                    b.HasIndex("Abbreviation")
                        .HasName("Source_Index_Abbreviation");

                    b.ToTable("Sources");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            APIDocsURL = "https://docs.bitfinex.com/docs/introduction",
                            Abbreviation = "BFX",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Bitfinex"
                        },
                        new
                        {
                            Id = 2L,
                            APIDocsURL = "None",
                            Abbreviation = "HAKO",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Coinhako"
                        },
                        new
                        {
                            Id = 3L,
                            APIDocsURL = "https://github.com/binance-exchange/binance-official-api-docs/blob/master/rest-api.md",
                            Abbreviation = "BNA",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Binance"
                        },
                        new
                        {
                            Id = 4L,
                            APIDocsURL = "https://www.ecb.europa.eu/stats/policy_and_exchange_rates/euro_reference_exchange_rates/html/index.en.html",
                            Abbreviation = "ECB",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "European Central Bank"
                        },
                        new
                        {
                            Id = 5L,
                            APIDocsURL = "https://www.alphavantage.co/documentation/",
                            Abbreviation = "AVG",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "AlphaVantage"
                        },
                        new
                        {
                            Id = 6L,
                            APIDocsURL = "https://docs.poloniex.com/#public-http-api-methods",
                            Abbreviation = "POLO",
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            Name = "Poloniex"
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Analytical.AnalysedComponent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ComponentType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<long?>("CurrencyId");

                    b.Property<long?>("CurrencyPairId");

                    b.Property<long?>("CurrencyTypeId");

                    b.Property<int>("Delay")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(86400000);

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsDenominated");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("UIFormatting");

                    b.Property<string>("Value");

                    b.HasKey("Id")
                        .HasName("AnalysedComponent_PK_Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("CurrencyPairId");

                    b.HasIndex("CurrencyTypeId");

                    b.ToTable("AnalysedComponents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(200),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(620),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 46L,
                            ComponentType = 6,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2390),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2400),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 47L,
                            ComponentType = 20,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2410),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2410),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 48L,
                            ComponentType = 21,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2420),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2420),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 56L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2420),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            Delay = 3000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2420),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 57L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2510),
                            CreatedBy = 0L,
                            CurrencyId = 3L,
                            Delay = 3000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2510),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 2L,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2510),
                            CreatedBy = 0L,
                            CurrencyId = 4L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2510),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 49L,
                            ComponentType = 6,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            CreatedBy = 0L,
                            CurrencyId = 4L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 50L,
                            ComponentType = 20,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            CreatedBy = 0L,
                            CurrencyId = 4L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 51L,
                            ComponentType = 21,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            CreatedBy = 0L,
                            CurrencyId = 4L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 3L,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            CreatedBy = 0L,
                            CurrencyId = 5L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 52L,
                            ComponentType = 6,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            CreatedBy = 0L,
                            CurrencyId = 5L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 53L,
                            ComponentType = 20,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            CreatedBy = 0L,
                            CurrencyId = 5L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2520),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 54L,
                            ComponentType = 21,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2530),
                            CreatedBy = 0L,
                            CurrencyId = 5L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2530),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 4L,
                            ComponentType = 80,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2530),
                            CreatedBy = 0L,
                            CurrencyPairId = 1L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2530),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        },
                        new
                        {
                            Id = 5L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2970),
                            CreatedBy = 0L,
                            CurrencyPairId = 1L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2970),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 6L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2980),
                            CreatedBy = 0L,
                            CurrencyPairId = 1L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2980),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 7L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2980),
                            CreatedBy = 0L,
                            CurrencyPairId = 1L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2980),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 8L,
                            ComponentType = 80,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2980),
                            CreatedBy = 0L,
                            CurrencyPairId = 2L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2980),
                            ModifiedBy = 0L,
                            UIFormatting = "0 a"
                        },
                        new
                        {
                            Id = 9L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            CreatedBy = 0L,
                            CurrencyPairId = 2L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 10L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            CreatedBy = 0L,
                            CurrencyPairId = 2L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 11L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            CreatedBy = 0L,
                            CurrencyPairId = 2L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 12L,
                            ComponentType = 80,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            CreatedBy = 0L,
                            CurrencyPairId = 5L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            ModifiedBy = 0L,
                            UIFormatting = "0 a"
                        },
                        new
                        {
                            Id = 13L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            CreatedBy = 0L,
                            CurrencyPairId = 5L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]00"
                        },
                        new
                        {
                            Id = 14L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            CreatedBy = 0L,
                            CurrencyPairId = 5L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]00"
                        },
                        new
                        {
                            Id = 15L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(2990),
                            CreatedBy = 0L,
                            CurrencyPairId = 5L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 16L,
                            ComponentType = 80,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            CreatedBy = 0L,
                            CurrencyPairId = 6L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            ModifiedBy = 0L,
                            UIFormatting = "0 a"
                        },
                        new
                        {
                            Id = 17L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            CreatedBy = 0L,
                            CurrencyPairId = 6L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]00"
                        },
                        new
                        {
                            Id = 18L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            CreatedBy = 0L,
                            CurrencyPairId = 6L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]00"
                        },
                        new
                        {
                            Id = 19L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            CreatedBy = 0L,
                            CurrencyPairId = 6L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 20L,
                            ComponentType = 80,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            CreatedBy = 0L,
                            CurrencyPairId = 7L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            ModifiedBy = 0L,
                            UIFormatting = "0 a"
                        },
                        new
                        {
                            Id = 21L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            CreatedBy = 0L,
                            CurrencyPairId = 7L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]00"
                        },
                        new
                        {
                            Id = 22L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3000),
                            CreatedBy = 0L,
                            CurrencyPairId = 7L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]00"
                        },
                        new
                        {
                            Id = 23L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            CreatedBy = 0L,
                            CurrencyPairId = 7L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 24L,
                            ComponentType = 80,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            CreatedBy = 0L,
                            CurrencyPairId = 8L,
                            Delay = 1000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "0 a"
                        },
                        new
                        {
                            Id = 25L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            CreatedBy = 0L,
                            CurrencyPairId = 8L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 26L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            CreatedBy = 0L,
                            CurrencyPairId = 8L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 27L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            CreatedBy = 0L,
                            CurrencyPairId = 8L,
                            Delay = 500,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 28L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            CreatedBy = 0L,
                            CurrencyPairId = 11L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 29L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            CreatedBy = 0L,
                            CurrencyPairId = 11L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3010),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 30L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            CreatedBy = 0L,
                            CurrencyPairId = 11L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 31L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            CreatedBy = 0L,
                            CurrencyPairId = 12L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 32L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            CreatedBy = 0L,
                            CurrencyPairId = 12L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 33L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            CreatedBy = 0L,
                            CurrencyPairId = 12L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 34L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            CreatedBy = 0L,
                            CurrencyPairId = 13L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3020),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 35L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            CreatedBy = 0L,
                            CurrencyPairId = 13L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 36L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            CreatedBy = 0L,
                            CurrencyPairId = 13L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 37L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            CreatedBy = 0L,
                            CurrencyPairId = 14L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 38L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            CreatedBy = 0L,
                            CurrencyPairId = 14L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3100),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 39L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            CreatedBy = 0L,
                            CurrencyPairId = 14L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 40L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            CreatedBy = 0L,
                            CurrencyPairId = 15L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 41L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            CreatedBy = 0L,
                            CurrencyPairId = 15L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 42L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            CreatedBy = 0L,
                            CurrencyPairId = 15L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 43L,
                            ComponentType = 10,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            CreatedBy = 0L,
                            CurrencyPairId = 16L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 44L,
                            ComponentType = 11,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            CreatedBy = 0L,
                            CurrencyPairId = 16L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0[.]00"
                        },
                        new
                        {
                            Id = 45L,
                            ComponentType = 70,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            CreatedBy = 0L,
                            CurrencyPairId = 16L,
                            Delay = 10000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3110),
                            ModifiedBy = 0L,
                            UIFormatting = "0[.]0"
                        },
                        new
                        {
                            Id = 55L,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3120),
                            CreatedBy = 0L,
                            CurrencyTypeId = 2L,
                            Delay = 3000,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 0, DateTimeKind.Utc).AddTicks(3120),
                            ModifiedBy = 0L,
                            UIFormatting = "$ 0 a"
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Analytical.AnalysedHistoricItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AnalysedComponentId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<DateTime>("HistoricDateTime");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id")
                        .HasName("AnalysedHistoricItem_PK_Id");

                    b.HasIndex("AnalysedComponentId");

                    b.ToTable("AnalysedHistoricItems");
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Logging.RequestLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("RawPayload");

                    b.Property<long>("RequestId");

                    b.Property<int>("Type");

                    b.HasKey("Id")
                        .HasName("RequestLog_PK_Id");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestLogs");
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.RcdHistoricItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<DateTime>("HistoricDateTime");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<long>("RequestComponentId");

                    b.Property<string>("Value")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue("");

                    b.HasKey("Id")
                        .HasName("RcdHistoricItem_PK_Id");

                    b.HasIndex("RequestComponentId");

                    b.ToTable("RcdHistoricItems");
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<string>("DataPath");

                    b.Property<int>("Delay")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<long>("FailureDelay")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(3600000L);

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<int>("RequestType");

                    b.Property<int>("ResponseType")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("Id")
                        .HasName("Request_PK_Id");

                    b.HasAlternateKey("Guid")
                        .HasName("Request_AK_Guid");

                    b.ToTable("Requests");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Request");
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.RequestComponent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AnomalyIgnorance")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("ComponentType");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<string>("Identifier");

                    b.Property<bool>("IsDenominated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("QueryComponent");

                    b.Property<long>("RequestId");

                    b.Property<string>("Value");

                    b.HasKey("Id")
                        .HasName("RequestComponent_PK_Id");

                    b.HasIndex("RequestId", "ComponentType")
                        .IsUnique()
                        .HasName("RequestComponent_AK_RequestId_ComponentType");

                    b.ToTable("RequestComponents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AnomalyIgnorance = false,
                            ComponentType = 1000,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1400),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1400),
                            ModifiedBy = 0L,
                            QueryComponent = "result",
                            RequestId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            AnomalyIgnorance = false,
                            ComponentType = 1000,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1770),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = true,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1770),
                            ModifiedBy = 0L,
                            QueryComponent = "result",
                            RequestId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            AnomalyIgnorance = false,
                            ComponentType = 1005,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1780),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1780),
                            ModifiedBy = 0L,
                            QueryComponent = "info/blocks",
                            RequestId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            AnomalyIgnorance = false,
                            ComponentType = 1010,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1780),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1780),
                            ModifiedBy = 0L,
                            QueryComponent = "info/difficulty",
                            RequestId = 3L
                        },
                        new
                        {
                            Id = 5L,
                            AnomalyIgnorance = false,
                            ComponentType = 1000,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1780),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1780),
                            ModifiedBy = 0L,
                            QueryComponent = "data/coin/circulatingSupply",
                            RequestId = 4L
                        },
                        new
                        {
                            Id = 6L,
                            AnomalyIgnorance = false,
                            ComponentType = 12,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            ModifiedBy = 0L,
                            QueryComponent = "7",
                            RequestId = 5L
                        },
                        new
                        {
                            Id = 7L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            ModifiedBy = 0L,
                            QueryComponent = "2",
                            RequestId = 5L
                        },
                        new
                        {
                            Id = 8L,
                            AnomalyIgnorance = false,
                            ComponentType = 8,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            ModifiedBy = 0L,
                            QueryComponent = "3",
                            RequestId = 5L
                        },
                        new
                        {
                            Id = 9L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            ModifiedBy = 0L,
                            QueryComponent = "0",
                            RequestId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            AnomalyIgnorance = false,
                            ComponentType = 5,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            ModifiedBy = 0L,
                            QueryComponent = "1",
                            RequestId = 5L
                        },
                        new
                        {
                            Id = 11L,
                            AnomalyIgnorance = false,
                            ComponentType = 12,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1790),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "7",
                            RequestId = 6L
                        },
                        new
                        {
                            Id = 12L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "2",
                            RequestId = 6L
                        },
                        new
                        {
                            Id = 13L,
                            AnomalyIgnorance = false,
                            ComponentType = 8,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "3",
                            RequestId = 6L
                        },
                        new
                        {
                            Id = 14L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "0",
                            RequestId = 6L
                        },
                        new
                        {
                            Id = 15L,
                            AnomalyIgnorance = false,
                            ComponentType = 5,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "1",
                            RequestId = 6L
                        },
                        new
                        {
                            Id = 16L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "gesmes:Envelope/Cube/Cube/Cube/0=>@rate",
                            RequestId = 7L
                        },
                        new
                        {
                            Id = 17L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "['Realtime Currency Exchange Rate']/['5. Exchange Rate']",
                            RequestId = 8L
                        },
                        new
                        {
                            Id = 18L,
                            AnomalyIgnorance = false,
                            ComponentType = 12,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1800),
                            ModifiedBy = 0L,
                            QueryComponent = "BTC_BCN/baseVolume",
                            RequestId = 9L
                        },
                        new
                        {
                            Id = 19L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            ModifiedBy = 0L,
                            QueryComponent = "BTC_BCN/lowestAsk",
                            RequestId = 9L
                        },
                        new
                        {
                            Id = 20L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            ModifiedBy = 0L,
                            QueryComponent = "BTC_BCN/highestBid",
                            RequestId = 9L
                        },
                        new
                        {
                            Id = 21L,
                            AnomalyIgnorance = false,
                            ComponentType = 12,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            ModifiedBy = 0L,
                            QueryComponent = "BTC_BTS/baseVolume",
                            RequestId = 10L
                        },
                        new
                        {
                            Id = 22L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1810),
                            ModifiedBy = 0L,
                            QueryComponent = "BTC_BTS/lowestAsk",
                            RequestId = 10L
                        },
                        new
                        {
                            Id = 23L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1890),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1890),
                            ModifiedBy = 0L,
                            QueryComponent = "BTC_BTS/highestBid",
                            RequestId = 10L
                        },
                        new
                        {
                            Id = 24L,
                            AnomalyIgnorance = false,
                            ComponentType = 12,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1890),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1890),
                            ModifiedBy = 0L,
                            QueryComponent = "volume",
                            RequestId = 11L
                        },
                        new
                        {
                            Id = 25L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1890),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1890),
                            ModifiedBy = 0L,
                            QueryComponent = "ask",
                            RequestId = 11L
                        },
                        new
                        {
                            Id = 26L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = 0L,
                            QueryComponent = "bid",
                            RequestId = 11L
                        },
                        new
                        {
                            Id = 27L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = 0L,
                            QueryComponent = "USDT_BTC/lowestAsk",
                            RequestId = 12L
                        },
                        new
                        {
                            Id = 28L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = 0L,
                            QueryComponent = "USDT_BTC/highestBid",
                            RequestId = 12L
                        },
                        new
                        {
                            Id = 29L,
                            AnomalyIgnorance = false,
                            ComponentType = 12,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>ETHBTC",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = 0L,
                            QueryComponent = "v",
                            RequestId = 13L
                        },
                        new
                        {
                            Id = 30L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>ETHBTC",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = 0L,
                            QueryComponent = "a",
                            RequestId = 13L
                        },
                        new
                        {
                            Id = 31L,
                            AnomalyIgnorance = false,
                            ComponentType = 8,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>ETHBTC",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = 0L,
                            QueryComponent = "A",
                            RequestId = 13L
                        },
                        new
                        {
                            Id = 32L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>ETHBTC",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            ModifiedBy = 0L,
                            QueryComponent = "b",
                            RequestId = 13L
                        },
                        new
                        {
                            Id = 33L,
                            AnomalyIgnorance = false,
                            ComponentType = 5,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1900),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>ETHBTC",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "B",
                            RequestId = 13L
                        },
                        new
                        {
                            Id = 34L,
                            AnomalyIgnorance = false,
                            ComponentType = 12,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>KNCETH",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "v",
                            RequestId = 14L
                        },
                        new
                        {
                            Id = 35L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>KNCETH",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "a",
                            RequestId = 14L
                        },
                        new
                        {
                            Id = 36L,
                            AnomalyIgnorance = false,
                            ComponentType = 8,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>KNCETH",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "A",
                            RequestId = 14L
                        },
                        new
                        {
                            Id = 37L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>KNCETH",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "b",
                            RequestId = 14L
                        },
                        new
                        {
                            Id = 38L,
                            AnomalyIgnorance = false,
                            ComponentType = 5,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            Identifier = "data/s=>KNCETH",
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "B",
                            RequestId = 14L
                        },
                        new
                        {
                            Id = 39L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "data/buy_price",
                            RequestId = 15L
                        },
                        new
                        {
                            Id = 40L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1910),
                            ModifiedBy = 0L,
                            QueryComponent = "data/sell_price",
                            RequestId = 15L
                        },
                        new
                        {
                            Id = 41L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = 0L,
                            QueryComponent = "data/buy_price",
                            RequestId = 16L
                        },
                        new
                        {
                            Id = 42L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = 0L,
                            QueryComponent = "data/sell_price",
                            RequestId = 16L
                        },
                        new
                        {
                            Id = 43L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = 0L,
                            QueryComponent = "data/buy_price",
                            RequestId = 17L
                        },
                        new
                        {
                            Id = 44L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = 0L,
                            QueryComponent = "data/sell_price",
                            RequestId = 17L
                        },
                        new
                        {
                            Id = 45L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = 0L,
                            QueryComponent = "data/buy_price",
                            RequestId = 18L
                        },
                        new
                        {
                            Id = 46L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = 0L,
                            QueryComponent = "data/sell_price",
                            RequestId = 18L
                        },
                        new
                        {
                            Id = 47L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1920),
                            ModifiedBy = 0L,
                            QueryComponent = "data/buy_price",
                            RequestId = 19L
                        },
                        new
                        {
                            Id = 48L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1930),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1930),
                            ModifiedBy = 0L,
                            QueryComponent = "data/sell_price",
                            RequestId = 19L
                        },
                        new
                        {
                            Id = 49L,
                            AnomalyIgnorance = false,
                            ComponentType = 2,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1930),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1930),
                            ModifiedBy = 0L,
                            QueryComponent = "data/buy_price",
                            RequestId = 20L
                        },
                        new
                        {
                            Id = 50L,
                            AnomalyIgnorance = false,
                            ComponentType = 1,
                            CreatedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1930),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsDenominated = false,
                            IsEnabled = true,
                            ModifiedAt = new DateTime(2019, 5, 20, 9, 14, 41, 62, DateTimeKind.Utc).AddTicks(1930),
                            ModifiedBy = 0L,
                            QueryComponent = "data/sell_price",
                            RequestId = 20L
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.RequestProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<long>("RequestId");

                    b.Property<int>("RequestPropertyType");

                    b.Property<string>("Value");

                    b.HasKey("Id")
                        .HasName("RequestProperty_PK_Id");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestProperties");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "module",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 1L,
                            RequestPropertyType = 32,
                            Value = "stats"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "action",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 1L,
                            RequestPropertyType = 32,
                            Value = "ethsupply"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "apikey",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 1L,
                            RequestPropertyType = 32,
                            Value = "TGAFGMGDKHJ8W2EKI26MJRRWGH44AV9224"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "module",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 2L,
                            RequestPropertyType = 32,
                            Value = "stats"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "action",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 2L,
                            RequestPropertyType = 32,
                            Value = "tokensupply"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "contractaddress",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 2L,
                            RequestPropertyType = 32,
                            Value = "0xdd974d5c2e2928dea5f71b9825b8b646686bd200"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "apikey",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 2L,
                            RequestPropertyType = 32,
                            Value = "TGAFGMGDKHJ8W2EKI26MJRRWGH44AV9224"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "apikey",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 8L,
                            RequestPropertyType = 300,
                            Value = "TV5HJJHNP8094BRO"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "function",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 8L,
                            RequestPropertyType = 300,
                            Value = "CURRENCY_EXCHANGE_RATE"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "from_currency",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 8L,
                            RequestPropertyType = 300,
                            Value = "EUR"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DeletedBy = 0L,
                            IsEnabled = true,
                            Key = "to_currency",
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestId = 8L,
                            RequestPropertyType = 300,
                            Value = "USD"
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Websocket.WebsocketCommand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CommandType");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<long>("Delay")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0L);

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<long>("WebsocketRequestId");

                    b.HasKey("Id")
                        .HasName("WebsocketCommand_PK_Id");

                    b.HasIndex("WebsocketRequestId");

                    b.ToTable("WebsocketCommands");
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Websocket.WebsocketCommandProperty", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CommandPropertyType");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<long>("CreatedBy");

                    b.Property<DateTime?>("DeletedAt");

                    b.Property<long>("DeletedBy");

                    b.Property<bool>("IsEnabled");

                    b.Property<string>("Key")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<DateTime>("ModifiedAt");

                    b.Property<long>("ModifiedBy");

                    b.Property<string>("Value")
                        .IsRequired();

                    b.Property<long>("WebsocketCommandId");

                    b.HasKey("Id")
                        .HasName("WebsocketCommandProperty_PK_Id");

                    b.HasIndex("WebsocketCommandId");

                    b.ToTable("WebsocketCommandProperties");
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.CurrencyPairRequest", b =>
                {
                    b.HasBaseType("Nozomi.Data.Models.Web.Request");

                    b.Property<long>("CurrencyPairId");

                    b.HasIndex("CurrencyPairId");

                    b.HasDiscriminator().HasValue("CurrencyPairRequest");

                    b.HasData(
                        new
                        {
                            Id = 5L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://api.ethfinex.com/v2/ticker/tETHUSD",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("0214da06-699d-4843-a88f-b3cf6883454f"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 0,
                            CurrencyPairId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://api.ethfinex.com/v2/ticker/tKNCUSD",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("be003106-ba60-46e8-a56d-10ff33a0c4ef"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 0,
                            CurrencyPairId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml",
                            Delay = 86400000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("b1aecae0-0235-4878-9e2e-8b44a98b49a2"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 2,
                            CurrencyPairId = 3L
                        },
                        new
                        {
                            Id = 8L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.alphavantage.co/query",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("653138a5-3df4-43fa-875f-945e7dffa40e"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 4L
                        },
                        new
                        {
                            Id = 9L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://poloniex.com/public?command=returnTicker",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("97646141-1e27-46c0-9271-5f557f92836f"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 5L
                        },
                        new
                        {
                            Id = 10L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://poloniex.com/public?command=returnTicker",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("eba1ac98-9072-4429-b60d-35e9da307d7a"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 6L
                        },
                        new
                        {
                            Id = 11L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://api.bitfinex.com/v1/pubticker/etheur",
                            Delay = 2000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("7883e24f-d941-4cf3-b684-d3d1eb27dac7"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 7L
                        },
                        new
                        {
                            Id = 12L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://poloniex.com/public?command=returnTicker",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("8deb3374-962d-4e06-97ac-0ccc39cc7906"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 8L
                        },
                        new
                        {
                            Id = 15L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.coinhako.com/api/v1/price/currency/BTCSGD",
                            Delay = 10000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("7df93046-cea1-4b37-8005-539c255bbfe9"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 11L
                        },
                        new
                        {
                            Id = 16L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.coinhako.com/api/v1/price/currency/BTCUSD",
                            Delay = 10000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("36caf468-b8d1-4d82-98ea-fba94bdf921a"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 12L
                        },
                        new
                        {
                            Id = 17L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.coinhako.com/api/v1/price/currency/ETHSGD",
                            Delay = 10000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("52088480-0ee9-41e6-8eda-aab4b2d09761"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 13L
                        },
                        new
                        {
                            Id = 18L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.coinhako.com/api/v1/price/currency/ETHUSD",
                            Delay = 10000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("5b68db33-4f46-4e6b-97ba-ad9393a95168"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 14L
                        },
                        new
                        {
                            Id = 19L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.coinhako.com/api/v1/price/currency/LTCSGD",
                            Delay = 10000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("94702f2f-8527-4ddf-98de-998343fe9784"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 15L
                        },
                        new
                        {
                            Id = 20L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://www.coinhako.com/api/v1/price/currency/LTCUSD",
                            Delay = 10000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("c1f6fc3f-d5f2-4a04-8e9e-66528e3bb568"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 1,
                            CurrencyPairId = 16L
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.CurrencyRequest", b =>
                {
                    b.HasBaseType("Nozomi.Data.Models.Web.Request");

                    b.Property<long>("CurrencyId");

                    b.HasIndex("CurrencyId");

                    b.HasDiscriminator().HasValue("CurrencyRequest");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://api.etherscan.io/api",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("f9ede5ad-aea5-4154-9395-671b2611a5ac"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 0,
                            CurrencyId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://api.etherscan.io/api",
                            Delay = 5000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("aa85dcba-a5d5-49c3-a858-d0d6c46e9b2b"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 0,
                            CurrencyId = 4L
                        },
                        new
                        {
                            Id = 3L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://insight.bitpay.com/api/status?q=getBlockCount",
                            Delay = 90000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("73b5731a-77ad-4a5c-a111-0d133c89cd1e"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 0,
                            CurrencyId = 5L
                        },
                        new
                        {
                            Id = 4L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "https://api.coinranking.com/v1/public/coin/1?base=USD",
                            Delay = 90000,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("4c192fd7-c924-4dad-a1a7-640aa4b583c4"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 0,
                            ResponseType = 0,
                            CurrencyId = 5L
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Websocket.WebsocketRequest", b =>
                {
                    b.HasBaseType("Nozomi.Data.Models.Web.Request");

                    b.Property<long>("CurrencyPairId")
                        .HasColumnName("WebsocketRequest_CurrencyPairId");

                    b.HasIndex("CurrencyPairId");

                    b.HasDiscriminator().HasValue("WebsocketRequest");

                    b.HasData(
                        new
                        {
                            Id = 13L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "wss://stream.binance.com:9443/stream?streams=!ticker@arr",
                            Delay = 0,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("c7cb205a-9800-44c5-88c9-050eb7ca3dc0"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 50,
                            ResponseType = 1,
                            CurrencyPairId = 9L
                        },
                        new
                        {
                            Id = 14L,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = 0L,
                            DataPath = "wss://stream.binance.com:9443/stream?streams=!ticker@arr",
                            Delay = 0,
                            DeletedBy = 0L,
                            FailureDelay = 0L,
                            Guid = new Guid("bff8f54a-0bc8-4ae6-9a44-9de66a85d662"),
                            IsEnabled = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ModifiedBy = 0L,
                            RequestType = 50,
                            ResponseType = 1,
                            CurrencyPairId = 10L
                        });
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.Currency", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.CurrencyType", "CurrencyType")
                        .WithMany("Currencies")
                        .HasForeignKey("CurrencyTypeId")
                        .HasConstraintName("CurrencyType_Currencies_Constraint")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.CurrencyPair", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.Source", "Source")
                        .WithMany("CurrencyPairs")
                        .HasForeignKey("SourceId")
                        .HasConstraintName("Source_CurrencyPairs_Constraint")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.CurrencyProperty", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.Currency", "Currency")
                        .WithMany("CurrencyProperties")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Currency.CurrencySource", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.Currency", "Currency")
                        .WithMany("CurrencySources")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("CurrencySource_Currency_Constraint")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nozomi.Data.Models.Currency.Source", "Source")
                        .WithMany("SourceCurrencies")
                        .HasForeignKey("SourceId")
                        .HasConstraintName("CurrencySource_Source_Constraint")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Analytical.AnalysedComponent", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.Currency", "Currency")
                        .WithMany("AnalysedComponents")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("Currency_AnalysedComponents_Constraint")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nozomi.Data.Models.Currency.CurrencyPair", "CurrencyPair")
                        .WithMany("AnalysedComponents")
                        .HasForeignKey("CurrencyPairId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nozomi.Data.Models.Currency.CurrencyType", "CurrencyType")
                        .WithMany("AnalysedComponents")
                        .HasForeignKey("CurrencyTypeId")
                        .HasConstraintName("CurrencyType_AnalysedComponents_Constraint")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Analytical.AnalysedHistoricItem", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Web.Analytical.AnalysedComponent", "AnalysedComponent")
                        .WithMany("AnalysedHistoricItems")
                        .HasForeignKey("AnalysedComponentId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Logging.RequestLog", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Web.Request", "Request")
                        .WithMany("RequestLogs")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.RcdHistoricItem", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Web.RequestComponent", "RequestComponent")
                        .WithMany("RcdHistoricItems")
                        .HasForeignKey("RequestComponentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.RequestComponent", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Web.Request", "Request")
                        .WithMany("RequestComponents")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.RequestProperty", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Web.Request", "Request")
                        .WithMany("RequestProperties")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Websocket.WebsocketCommand", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Web.Websocket.WebsocketRequest", "WebsocketRequest")
                        .WithMany("WebsocketCommands")
                        .HasForeignKey("WebsocketRequestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Websocket.WebsocketCommandProperty", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Web.Websocket.WebsocketCommand", "WebsocketCommand")
                        .WithMany("WebsocketCommandProperties")
                        .HasForeignKey("WebsocketCommandId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.CurrencyPairRequest", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.CurrencyPair", "CurrencyPair")
                        .WithMany("CurrencyPairRequests")
                        .HasForeignKey("CurrencyPairId")
                        .HasConstraintName("CurrencyPair_CurrencyPairRequest_Constraint")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.CurrencyRequest", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.Currency", "Currency")
                        .WithMany("CurrencyRequests")
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("CurrencyRequest_Currency_Constraint")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Nozomi.Data.Models.Web.Websocket.WebsocketRequest", b =>
                {
                    b.HasOne("Nozomi.Data.Models.Currency.CurrencyPair", "CurrencyPair")
                        .WithMany("WebsocketRequests")
                        .HasForeignKey("CurrencyPairId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
