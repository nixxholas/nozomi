@using Newtonsoft.Json
@using Nozomi.Preprocessing
@using Nozomi.Service.Events.Interfaces
@inject IRequestEvent _requestEvent

@{
    var requests = _requestEvent.GetAllDTO(0);
}


<!-- Content Section -->
<div class="bg-light">
    <div class="container space-2">
        <h3 class="mb-6">Requests</h3>
        
        <b-table :items="requests">
            <template slot="RequestType" slot-scope="datum">
                {{  }}
            </template>
            <template slot="actions" slot-scope="datum">
                <b-button :href='/manage/request/' + datum.item.Guid>View</b-button>
            </template>
        </b-table>
    </div>
</div>

@section Scripts {
    <script>
        const vm = new Vue({
            // options
            el: "#content",
            // Just dish any random variable in for now
            data: {
                requestTypes: @Html.Raw(Json.Serialize(NozomiServiceConstants.requestTypes, new JsonSerializerSettings
                 {
                   ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                 })),
                responseTypes: @Html.Raw(Json.Serialize(NozomiServiceConstants.responseTypes, new JsonSerializerSettings
                 {
                   ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                 })),
                requests: @Html.Raw(JsonConvert.SerializeObject(requests))
            },
            methods: {
                getRequestTypeStr(val) {
                    if (this.requestTypes != null) {
                        for (i = 0; i < this.requestTypes.length; i++) {
                            if (this.requestTypes[i].Value == val) {
                                return this.requestTypes[i].Key;
                            }
                        }
                    }
          
                    return null;
                },
                getResponseTypeStr(val) {
                    if (this.responseTypes != null) {
                        for (i = 0; i < this.responseTypes.length; i++) {
                            if (this.responseTypes[i].Value == val) {
                                return this.responseTypes[i].Key;
                            }
                        }
                    }
          
                    return null;
                }
            },
            created: function() {
            }
        });
    </script>
}