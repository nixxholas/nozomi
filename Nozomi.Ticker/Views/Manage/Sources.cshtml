@using Newtonsoft.Json
@model Nozomi.Base.Identity.ViewModels.Manage.IndexViewModel

<!-- Content Section -->
<div class="bg-light">
    <div class="container space-2">
        <h3 class="mb-6">Sources</h3>

        <b-table
            :per-page="sourcesDataRowsPerPage" :current-page="currentSourceDataPage"
            :items="sources" :fields="dataFields">
            <template slot="Name" slot-scope="datum">
                {{ datum.item.Name }}
            </template>
            <template slot="Abbreviation" slot-scope="datum">
                {{ datum.item.Abbreviation }}
            </template>
            <template slot="APIDocsURL" slot-scope="datum">
                <a :href="datum.item.APIDocsURL">{{ datum.item.APIDocsURL }}</a>
            </template>
            <template slot="isEnabled" slot-scope="datum">
                <b-form-checkbox v-model="datum.item.IsEnabled" disabled/>
            </template>
            <template slot="actions" slot-scope="datum">
                <b-button variant="primary" b-modal.modal-xl
                          v-on:click="showEditModal(datum.item.Name, datum.item.Abbreviation, datum.item.APIDocsURL, datum.item.IsEnabled)">
                    Edit
                </b-button>
            </template>
        </b-table>
    </div>
</div>


<!-- EditModal -->
<b-modal ref="edit-modal" id="modal-xl" size="xl" title="Edit Source" ok-title="Save changes" v-on:ok="handleOk">
    <b-form v-on:submit.stop.prevent="onEditSubmit">
        <b-form-group
            id="sourceName-input-group"
            label="Name"
            label-for="sourceName-input">
            <b-form-input
                id="sourceName-input"
                v-model="editForm.sourceName"
                required
                placeholder="Enter source name">
            </b-form-input>
        </b-form-group>

        <b-form-group
            id="abbreviation-input-group"
            label="Abbreviation"
            label-for="abbreviation-input">
            <b-form-input
                id="abbreviation-input"
                v-model="editForm.abbreviation"
                required
                placeholder="Enter source abbreviation">
            </b-form-input>
        </b-form-group>

        <b-form-group id="apiDocsURL-input-group" label="API Docs URL:" label-for="apiDocsURL-input">
            <b-form-input
                id="apiDocsURL-input"
                v-model="editForm.apiDocsURL"
                required
                placeholder="Enter source API documentation URL">
            </b-form-input>
        </b-form-group>

        <b-form-group id="isEnabled-input-group">
            <b-form-checkbox v-model="editForm.isEnabled" switch>Is Enabled</b-form-checkbox>
        </b-form-group>

        @* <b-button type="submit" variant="primary" class="float-right">Submit</b-button> *@
        @* <b-button v-on:click="hideEditModal" variant="secondary" class="float-right">Close</b-button> *@
    </b-form>
</b-modal>


@section Scripts {
    <script>
        const vm = new Vue({
            // options
            el: "#content",
            // Just dish any random variable in for now
            data: {
                dataFields: [
                    {
                        key: 'Name',
                        label: 'Name',
                        sortable: true
                    },
                    {
                        key: 'Abbreviation',
                        label: 'Abbreviation',
                        sortable: true
                    },
                    {
                        key: 'APIDocsURL',
                        label: 'API Docs URL',
                        sortable: true
                    },
                    {
                        key: 'isEnabled',
                        label: 'Is Enabled',
                        sortable: true
                    },
                    {
                        key: 'actions',
                        label: '',
                        sortable: false
                    }
                ],
                sourcesDataRowsPerPage: 20,
                currentSourceDataPage: 1,
                sources: @Html.Raw(JsonConvert.SerializeObject(@Model.Sources)),
                editForm: {
                    sourceName: '',
                    abbreviation: '',
                    apiDocsURL: '',
                    isEnabled: Boolean
                }
            },
            methods: {
                showEditModal(sourceName, abbreviation, apiDocsURL, isEnabled) {
                    this.editForm.sourceName = sourceName;
                    this.editForm.abbreviation = abbreviation;
                    this.editForm.apiDocsURL = apiDocsURL;
                    this.editForm.isEnabled = isEnabled;

                    this.$refs['edit-modal'].show();
                },
                hideEditModal() {
                    this.$refs['edit-modal'].hide();
                },
                handleOk(bvModalEvt) {
                    // Prevent modal from closing
                    bvModalEvt.preventDefault();
                    // Trigger submit handler
                     this.onEditSubmit();
                },
                async onEditSubmit() {
                    console.log('ayy this hit');
                    var formData = new FormData();
                    formData.append('Name', this.editForm.sourceName);
                    formData.append('Abbreviation', this.editForm.abbreviation);
                    formData.append('ApiDocsURL', this.editForm.apiDocsURL);
                    formData.append('IsEnabled', this.editForm.isEnabled);

                    const response = await fetch(`/EditSource/${this.editForm.abbreviation}`,
                        {
                            method: 'PUT',
                            body: formData
                        });

                    console.log(response);

                    // Hide the modal manually
                    this.$refs['edit-modal'].hide();

                    // TODO: Update the table data after delete.
                }

            }
        });
    </script>
}