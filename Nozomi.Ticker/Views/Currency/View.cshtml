@using Newtonsoft.Json
@using Nozomi.Preprocessing
@model Nozomi.Data.ResponseModels.Currency.AbbrvUniqueCurrencyResponse

<!-- Description Section -->
    <div id="partialView" class="container space-2 space-top-md-4 space-bottom-md-3">
      @if (Model != null)
      {
      <div class="row">
        <div class="col-lg-7 mb-7 mb-lg-0">
          <div id="SVGmockupBg" class="svg-preloader">
        <!-- Nav Classic -->
        <div class="position-relative w-lg-85 bg-white text-center z-index-2 mx-lg-auto">
          <ul class="nav nav-classic nav-rounded nav-shadow nav-justified" id="pills-tab" role="tablist">
            <li class="nav-item">
              <a class="nav-link font-weight-medium active" id="pills-one-tab" data-toggle="pill" href="#pills-one" role="tab" aria-controls="pills-one" aria-selected="true">
                <div class="d-md-flex justify-content-md-center align-items-md-center">
                  <figure class="ie-height-40 d-none d-md-block w-100 max-width-6 mr-3">
                    <img class="js-svg-injector" src="../../assets/svg/icons/icon-14.svg" alt="SVG"
                         data-parent="#SVGmockupBg">
                  </figure>
                  Statistics
                </div>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link font-weight-medium" id="pills-two-tab" data-toggle="pill" href="#pills-two" role="tab" aria-controls="pills-two" aria-selected="false">
                <div class="d-md-flex justify-content-md-center align-items-md-center">
                  <figure class="ie-height-40 d-none d-md-block w-100 max-width-6 mr-3">
                    <img class="js-svg-injector" src="../../assets/svg/icons/icon-21.svg" alt="SVG"
                         data-parent="#SVGmockupBg">
                  </figure>
                  Markets
                </div>
              </a>
            </li>
            <li class="nav-item">
              <a class="nav-link font-weight-medium" id="pills-three-tab" data-toggle="pill" href="#pills-three" role="tab" aria-controls="pills-three" aria-selected="false">
                <div class="d-md-flex justify-content-md-center align-items-md-center">
                  <figure class="ie-height-40 d-none d-md-block w-100 max-width-6 mr-3">
                    <img class="js-svg-injector" src="../../assets/svg/icons/icon-5.svg" alt="SVG"
                         data-parent="#SVGmockupBg">
                  </figure>
                  Historical
                </div>
              </a>
            </li>
          </ul>
        </div>
        <!-- End Nav Classic -->

        <!-- Tab Content -->
        <div class="tab-content" id="pills-tabContent">
          <div class="tab-pane fade pt-9 show active" id="pills-one" role="tabpanel" aria-labelledby="pills-one-tab">
            <!-- Mockup Block -->
            <div class="row justify-content-lg-between align-items-lg-center">
                <div v-for="aComp in currency.AnalysedComponents" class="col-4">
                <h6>{{ getAnalysedCompStr(aComp.ComponentType) }}</h6>
                  <small class="text-muted">{{ aComp.Value }}</small>
                </div>
            </div>
            <!-- End Mockup Block -->
          </div>
          <div class="tab-pane fade pt-9" id="pills-two" role="tabpanel" aria-labelledby="pills-two-tab">
            <!-- Mockup Block -->
            <div class="row justify-content-lg-between align-items-lg-center">
              <div class="col">
                <b-table :fields="tickerPairTableFields"
                         :items="currency.TickerPairs">
                  <template slot="PairAbbreviation" slot-scope="datum">
                    <small v-for="source in datum.item">{{ source.Name }}</small>
                  </template>
                </b-table>
              </div>
            </div>
            <!-- End Mockup Block -->
          </div>
          <div class="tab-pane fade pt-9" id="pills-three" role="tabpanel" aria-labelledby="pills-three-tab">
            <!-- Mockup Block -->
            <div class="row justify-content-lg-between align-items-lg-center">
              <div class="col-lg-4 mb-9 mb-lg-0">
                <!-- Info -->
                <div class="mb-5">
                  <h3 class="h4 font-weight-semi-bold">Review performance and improve strategy</h3>
                  <p>The time has come to bring those ideas and plans to life.</p>
                </div>

                <ul class="list-unstyled text-secondary font-size-1">
                  <li class="media my-3">
                    <span class="fas fa-check text-primary mt-1 mr-3"></span>
                    <span class="media-body">
                      Whether through commerce or just an experience
                    </span>
                  </li>
                  <li class="media my-3">
                    <span class="fas fa-check text-primary mt-1 mr-3"></span>
                    <span class="media-body">
                      Now that your brand is all dressed up
                    </span>
                  </li>
                  <li class="media my-3">
                    <span class="fas fa-check text-primary mt-1 mr-3"></span>
                    <span class="media-body">
                      This part is really crucial in keeping the project
                    </span>
                  </li>
                </ul>
                <!-- End Info -->
              </div>

              <div class="col-lg-7 position-relative">
                <div class="pl-md-9">
                  <img class="img-fluid shadow-sm rounded" src="../../assets/img/700x525/img3.jpg" alt="Image Description">
                </div>

                <!-- SVG Component -->
                <div class="position-absolute bottom-0 left-0 w-75 z-index-n1">
                  <figure class="ie-abstract-shapes-3">
                    <img class="js-svg-injector" src="../../assets/svg/components/abstract-shapes-3.svg" alt="Image Description"
                         data-parent="#SVGmockupBg">
                  </figure>
                </div>
                <!-- End SVG Component -->
              </div>
            </div>
            <!-- End Mockup Block -->
          </div>
        </div>
        <!-- End Tab Content -->
      </div>
        </div>

        <div id="stickyBlockStartPoint" class="col-lg-5">
          <!-- Sticky Block -->
          <div class="js-sticky-block pl-lg-4"
               data-parent="#stickyBlockStartPoint"
               data-sticky-view="lg"
               data-start-point="#stickyBlockStartPoint"
               data-end-point="#stickyBlockEndPoint"
               data-offset-top="80"
               data-offset-bottom="130">
            <div class="mb-6">
              <h1 class="h4 text-primary font-weight-semi-bold">{{ currency.Name }}</h1>
              <p class="mb-0">{{ currency.Description }}</p>
            </div>

            <hr class="my-5">

            <!-- List -->
            <ul class="list-unstyled mb-0">
              <li class="media mb-1">
                <div class="d-flex w-40 w-sm-30">
                  <h3 class="h6">Abbreviation</h3>
                </div>
                <div class="media-body">
                  <small class="text-muted">
                    {{ currency.Abbreviation }}
                  </small>
                </div>
              </li>

              <li class="media mb-1">
                <div class="d-flex w-40 w-sm-30">
                  <h4 class="h6">Sources</h4>
                </div>
                <div class="media-body">
                  <small class="d-block text-muted" v-for="source in currency.CurrencySources">
                    {{ source.Name }}
                  </small>
                </div>
              </li>

              @* <li class="media"> *@
              @*   <div class="d-flex w-40 w-sm-30"> *@
              @*     <h4 class="h6">Ticker Pairs</h4> *@
              @*   </div> *@
              @*   <div class="media-body"> *@
              @*     <small class="d-block text-muted" v-for="tp in currency.TickerPairs"> *@
              @*       {{ tp.PairAbbreviation }} *@
              @*       <span class="badge badge-pill badge-primary" v-for="source in tp.Sources"> *@
              @*         {{ source.Name }} *@
              @*       </span> *@
              @*     </small> *@
              @*   </div> *@
              @* </li> *@
            </ul>
            <!-- End List -->

            <hr class="my-5">

            <div class="media">
              <div class="d-flex w-40 w-sm-30">
                <h4 class="h6">Share</h4>
              </div>
              <div class="media-body">
                <!-- Social Networks -->
                <ul class="list-inline mb-0">
                  <li class="list-inline-item">
                    <a class="btn btn-sm btn-icon btn-soft-secondary btn-bg-transparent" href="#">
                      <span class="fab fa-facebook-f btn-icon__inner"></span>
                    </a>
                  </li>
                  <li class="list-inline-item">
                    <a class="btn btn-sm btn-icon btn-soft-secondary btn-bg-transparent" href="#">
                      <span class="fab fa-google btn-icon__inner"></span>
                    </a>
                  </li>
                  <li class="list-inline-item">
                    <a class="btn btn-sm btn-icon btn-soft-secondary btn-bg-transparent" href="#">
                      <span class="fab fa-twitter btn-icon__inner"></span>
                    </a>
                  </li>
                  <li class="list-inline-item">
                    <a class="btn btn-sm btn-icon btn-soft-secondary btn-bg-transparent" href="#">
                      <span class="fab fa-github btn-icon__inner"></span>
                    </a>
                  </li>
                </ul>
                <!-- End Social Networks -->
              </div>
            </div>
          </div>
          <!-- End Sticky Block -->
        </div>
      </div>
      }
    </div>
    <!-- End Description Section -->
  
  @section Scripts
{
  <script>
    const vm = new Vue({
      // options
      el: "#partialView",
      // Just dish any random variable in for now
      data: {
        acTypes: @Html.Raw(Json.Serialize(NozomiServiceConstants.analysedComponentTypes, new JsonSerializerSettings
                 {
                   ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                 })),
        reqCompTypes: @Html.Raw(Json.Serialize(NozomiServiceConstants.requestComponentTypes, new JsonSerializerSettings
                 {
                   ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                 })),
        currency: @Html.Raw(Json.Serialize(Model, new JsonSerializerSettings
                  {
                   ReferenceLoopHandling = ReferenceLoopHandling.Ignore
                  })),
        tickerPairTableFields: [
          {
            key: 'PairAbbreviation',
            label: 'Pair',
            sortable: true
          },
          {
            key: 'Sources',
            label: 'Exchanges',
            sortable: false
          }]
      },
      created: function() {
      },
      methods: {
        getAnalysedCompStr(val) {
          if (this.acTypes != null) {
            for (i = 0; i < this.acTypes.length; i++) {
              if (this.acTypes[i].Value == val) {
                return this.acTypes[i].Key;
              }
            }
          }
          
          return null;
        }
      },
      mounted: function() {
      }
    });
  </script>
}