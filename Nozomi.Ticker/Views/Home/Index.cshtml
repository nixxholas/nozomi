@using Nozomi.Data
@using Nozomi.Service.Identity.Managers
@using Nozomi.Service.Services.Interfaces
@inject NozomiSignInManager SignInManager
@{
  ViewData["Title"] = "Home Page";
}
  
<div class="position-relative">
  <div class="gradient-overlay-half-dark-v2">
    <div class="container">
      <div class="row justify-content-lg-between height-lg-100vh align-items-md-center space-2" id="vueTableBody">
        <b-card style="width: 100%" title="Market Data">
          <p class="card-text">
            <b-table responsive
                     :per-page="tickerDataRowsPerPage" :current-page="currentTickerDataPage"
                     :fields="tickerDataFields" :items="tickerData">
              <!-- A virtual composite column -->
              <template slot="lastUpdated" slot-scope="datum">
                @* // https://stackoverflow.com/questions/32540667/moment-js-utc-to-local-time *@
                {{ moment.utc(datum.item.lastUpdated).fromNow() }}
              </template>
              <!-- A virtual composite column -->
              <template slot="properties" slot-scope="datum">
                <b-badge class="mr-2" variant="dark" v-for="prop in datum.item.properties">
                  <b>{{ prop.key }}</b> {{ prop.value }}
                </b-badge>
              </template>
              <!-- A virtual composite column -->
              <template slot="actions" slot-scope="datum">
                <a class="btn btn-sm btn-primary transition-3d-hover"
                   :href="'/source/' + datum.item.exchangeAbbrv">
                  View
                </a>
              </template>
            </b-table>
            <b-row>
              <b-col md="6" class="my-1">
                <b-pagination :total-rows="tickerDataRows" :per-page="tickerDataRowsPerPage"
                              v-model="currentTickerDataPage" class="my-0"/>
              </b-col>
            </b-row>
          </p>
        </b-card>
        @* <div class="col-md-6 col-lg-5 mb-5 mb-md-0"> *@
        @*   <h3 class="text-white font-weight-medium mb-1">Ready to get started?</h3> *@
        @*   <p class="text-white-70 mb-0">Create your account and obtain the data you need.</p> *@
        @* </div> *@
        @* *@
        @* <div class="col-md-6 col-lg-5 text-md-right"> *@
        @*   <a class="btn btn-success btn-wide transition-3d-hover mb-1 mb-sm-0 mr-sm-1" *@
        @*      asp-controller="Account" asp-action="Register">Sign Up</a> *@
        @*   <a class="btn text-primary btn-white btn-wide transition-3d-hover mb-1 mb-sm-0" href="#">Learn More</a> *@
        @* </div> *@
      </div>
    </div>
    </div>
</div>

  <hr class="my-0">

  <div class="container space-2 space-md-3">
    <div class="row align-items-lg-center">
      <div class="col-lg-5 mb-7 mb-lg-0">
        <!-- Title -->
        <div class="pr-lg-4">
          <span class="btn btn-icon btn-soft-primary rounded-circle mb-3">
            <span class="small font-weight-semi-bold btn-icon__inner">01.</span>
          </span>
          <h2 class="h4 font-weight-semi-bold text-primary">Cost effective</h2>
          <p class="mb-0">Our plans are technically limitless.. You don't have to pay any overcharge because
            there isn't one!</p>
        </div>
        <!-- End Title -->
      </div>

      <div id="SVGmarketingStrategy" class="col-lg-7 svg-preloader">
        <!-- SVG Icon -->
        <figure class="ie-marketing-strategy">
          <img class="js-svg-injector" src="../../assets/svg/illustrations/marketing-strategy.svg" alt="Image Description"
               data-parent="#SVGmarketingStrategy">
        </figure>
        <!-- End SVG Icon -->
      </div>
    </div>
  </div>
  
    <div class="container space-1">
      <div class="row align-items-lg-center">
        <div class="col-lg-5 order-lg-2 mb-7 mb-lg-0">
          <!-- Title -->
          <div class="pl-lg-4">
            <span class="btn btn-icon btn-soft-primary rounded-circle mb-3">
              <span class="small font-weight-semi-bold btn-icon__inner">02.</span>
            </span>
            <h2 class="h4 font-weight-semi-bold text-primary">Safe. Stable. Secure.</h2>
            <p class="mb-0">Advanced distributed system architecture built to protect against DDoS and other potential 
              threats. Security protocols are fully aligned and compliant with industry best practices.</p>
          </div>
          <!-- End Title -->
        </div>

        <div id="SVGappDevelopment" class="col-lg-7 order-lg-1 svg-preloader">
          <!-- SVG Icon -->
          <figure class="ie-app-development">
            <img class="js-svg-injector" src="../../assets/svg/illustrations/app-development.svg" alt="SVG Illustration"
                 data-parent="#SVGappDevelopment">
          </figure>
          <!-- End SVG Icon -->
        </div>
      </div>
    </div>

    <div class="container space-2 space-md-3">
      <div class="row align-items-lg-center">
        <div class="col-lg-5 mb-7 mb-lg-0">
          <div class="pr-lg-4">
            <span class="btn btn-icon btn-soft-primary rounded-circle mb-3">
              <span class="small font-weight-semi-bold btn-icon__inner">03.</span>
            </span>
            <h2 class="h4 font-weight-semi-bold text-primary">Analyse the history.</h2>
            <p class="mb-0">Nozomi provides a handful of nifty features that will empower you to create powerful
              analytical results to help with your business based on the historical data we've obtained.</p>
          </div>
        </div>

        <div id="SVGbusinessAnalysis" class="col-lg-7 svg-preloader">
          <figure class="ie-business-analysis">
            <img class="js-svg-injector" src="../../assets/svg/illustrations/business-analysis.svg" alt="SVG Illustration"
                 data-parent="#SVGbusinessAnalysis">
          </figure>
        </div>
      </div>
    </div>
  
@section Scripts
{
  <script>
    const vm = new Vue({
      // options
      el: "#vueTableBody",
      // Just dish any random variable in for now
      data: {
        tickerDataFields: [
          {
            key: 'currencyPairId',
            label: '#',
            sortable: true
          },
          {
            key: 'exchange',
            label: 'Source',
            sortable: true
          },
          {
            key: 'tickerAbbreviation',
            label: 'Pair',
            sortable: true
          },
          {
            key: 'lastUpdated',
            label: 'Last Updated',
            sortable: false
          },
          {
            key: 'properties',
            label: "Data",
            sortable: false
          },
          {
            key: 'actions',
            label: "",
            sortable: false
          }
        ],
        currentTickerDataPage: 1,
        tickerData: [],
        tickerDataRowsPerPage: 20,
        tickerDataRows: 0
      },
      created: function() {
        const connection = new SignalR.HubConnectionBuilder()
          .withUrl("/ticker")
          .build();
            
        // https://github.com/aspnet/SignalR/issues/3294
        connection.start().then(() => {
          connection.invoke("Subscribe", 1).catch(err => console.error(err.toString()));
        }).catch(err => document.write(err));

        function start() {
          try {
            connection.start();
            console.log('connected');
          } catch (err) {
            console.log(err);
            setTimeout(() => start(), 5000);
          }
        };

        connection.onclose(() => {
          start();
        });

        connection.on("tickers",
          (tickers) => {
            //console.dir(tickers);
            this.tickerData = tickers;
            this.tickerDataRows = tickers.length;
          });
      }
    });
  </script>
}
