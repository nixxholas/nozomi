@using Nozomi.Service.Identity.Managers
@inject NozomiSignInManager SignInManager
@{
  ViewData["Title"] = "Home Page";
}
  

<!-- Hero Section -->
<div id="SVGheroSection" class="svg-preloader d-lg-flex position-relative border-bottom z-index-2">
  <div class="container d-lg-flex align-items-lg-center flex-lg-wrap height-lg-100vh text-center space-top-2 space-top-md-4 space-top-lg-3">
    <div class="w-100 mx-auto mb-9 mb-lg-0">
      <div class="mb-5">
        <h1 class="display-4 font-size-md-down-5 font-weight-semi-bold">Market data, all in one place.</h1>
        <p>Nozomi is the leading data metrics service that will support any <strong class="text-primary">endpoint</strong>.</p>
        <!-- Area Chart -->
        <div class="js-area-chart u-area-chart"
             data-height="16rem"
             data-mobile-height="16rem"
             data-offset-x="30"
             data-offset-y="0"
             data-postfix="m"
             data-is-show-area="true"
             data-is-show-line="false"
             data-is-show-point="false"
             data-is-full-width="true"

             data-is-stack-bars="true"
             data-is-show-axis-x="false"
             data-is-show-axis-y="false"
             data-is-show-tooltips="true"
             data-tooltip-description-position="center"
             data-tooltip-custom-class="u-area-chart__tooltip"

             data-align-text-axis-x="center"
             data-fill-opacity=".8"
             data-fill-colors='["#377dff"]'
             data-stroke-width=".0625rem"
             data-stroke-color="#f0f4f7"
             data-stroke-dash-array="0"
             data-text-size-x=".75rem"
             data-text-color-x="#77838f"
             data-text-offset-top-x="10"

             data-text-size-y=".75rem"
             data-text-color-y="#77838f"
             data-points-colors='["#377dff"]'
             data-series='[[10,40,39]]'></div>

        <div class="w-lg-50 mt-auto mx-lg-auto">
          <!-- SVG Icon -->
          <figure class="ie-subscribe-2">
            <img class="js-svg-injector" src="../../assets/svg/flat-icons/easy-start.svg" alt="Image Description"
                 data-parent="#SVGeasyStart">
          </figure>
          <!-- End SVG Icon -->
        </div>
      </div>

      <!-- SVG Component -->
      <div class="d-none d-lg-block content-centered-y left-0 w-100 max-width-40 z-index-n1">
        <figure class="ie-abstract-shapes-1">
          <img class="js-svg-injector" src="../../assets/svg/components/abstract-shapes-1.svg" alt="Image Description"
               data-parent="#SVGheroSection">
        </figure>
      </div>
      <!-- End SVG Component -->

      <!-- SVG Component -->
      <div class="d-none d-lg-block content-centered-y right-0 w-100 max-width-35 z-index-n1">
        <figure class="ie-abstract-shapes-10">
          <img class="js-svg-injector" src="../../assets/svg/components/abstract-shapes-10.svg" alt="Image Description"
               data-parent="#SVGheroSection">
        </figure>
      </div>
      <!-- End SVG Component -->
    </div>
    <!-- End Hero Section -->
  </div>
</div>

<!-- CTA Section -->
<div id="SVGctaSection" class="svg-preloader position-relative gradient-half-warning-v2 z-index-2 overflow-hidden">
  <div class="container space-2" id="vueTableBody">
    <h3 class="h2 text-center font-weight-semi-bold mb-3">Market Data</h3>
    <b-card style="width: 100%">
      <p class="card-text">
        <b-table responsive :busy="currencies.length == 0"
                 :per-page="itemsPerPage" :current-page="currentCurrencyPage"
                 :fields="currencyDataFields" :items="currencies">
          <!-- A virtual composite column -->
          <template slot="name" slot-scope="datum">
            <a :href="'/currency/' + datum.item.abbreviation">{{ datum.item.name }}</a><br>
            {{ datum.item.abbreviation }}
          </template>
          <!-- A virtual composite column -->
          <template slot="marketCap" slot-scope="datum">
            ${{ datum.item.marketCap }}
          </template>
          <!-- A virtual composite column -->
          <template slot="averagePrice" slot-scope="datum">
            ${{ datum.item.averagePrice }}
          </template>
          <!-- A virtual composite column -->
          <template slot="dailyAvgPricePctChange" slot-scope="datum">
            <div class="text-success" v-if="datum.item.dailyAvgPricePctChange > 0">
              {{ datum.item.dailyAvgPricePctChange }}%
              <i class="fas fa-caret-up">
              </i>
            </div>
            <div class="text-success" v-else-if="datum.item.dailyAvgPricePctChange < 0">
              {{ datum.item.dailyAvgPricePctChange }}%
              <i class="fas fa-caret-down">
              </i>
            </div>
            <div v-else>
              {{ datum.item.dailyAvgPricePctChange }}%
            </div>
          </template>
          <template slot="averagePriceHistory" slot-scope="datum">
            <!-- Area Chart -->
            <!-- Area Chart -->
            <div class="js-area-chart u-area-chart"
                 data-postfix="m"
                 data-is-show-area="true"
                 data-is-show-line="false"
                 data-is-show-point="false"
                 data-is-full-width="true"

                 data-is-stack-bars="true"
                 data-is-show-axis-x="false"
                 data-is-show-axis-y="false"
                 data-is-show-tooltips="true"
                 data-tooltip-description-position="center"
                 data-tooltip-custom-class="u-area-chart__tooltip"

                 data-align-text-axis-x="center"
                 data-fill-opacity=".8"
                 data-fill-colors='["#377dff"]'
                 data-stroke-width=".0625rem"
                 data-stroke-color="#f0f4f7"
                 data-stroke-dash-array="0"
                 data-text-size-x=".75rem"
                 data-text-color-x="#77838f"
                 data-text-offset-top-x="10"

                 data-text-size-y=".75rem"
                 data-text-color-y="#77838f"
                 data-points-colors='["#377dff"]'
                 :data-series="datum.item.averagePriceHistory"></div>
          </template>
        </b-table>
        <b-row>
          <b-col md="6" class="my-1">
            <b-pagination :total-rows="currencies.length" :per-page="itemsPerPage"
                          v-model="currentCurrencyPage" class="my-0"/>
          </b-col>
        </b-row>
      </p>
    </b-card>
  </div>
  
  <!-- SVG Component -->	
  <figure class="position-absolute top-0 left-0 w-100 max-width-27 z-index-n1">	
    <img class="js-svg-injector" src="../../assets/svg/components/abstract-shapes-8.svg" alt="Image Description"	
         data-parent="#SVGctaSection">	
  </figure>	
  <!-- End SVG Component -->	

  <!-- SVG Component -->	
  <figure class="position-absolute bottom-0 right-0 w-100 max-width-27 z-index-n1">	
    <img class="js-svg-injector" src="../../assets/svg/components/abstract-shapes-5.svg" alt="Image Description"	
         data-parent="#SVGctaSection">	
  </figure>	
  <!-- End SVG Component -->
</div>
<!-- End CTA Section -->

  @* <hr class="my-0"> *@
  @* *@
  @* <div class="container space-2 space-md-3"> *@
  @*   <div class="row align-items-lg-center"> *@
  @*     <div class="col-lg-5 mb-7 mb-lg-0"> *@
  @*       <!-- Title --> *@
  @*       <div class="pr-lg-4"> *@
  @*         <span class="btn btn-icon btn-soft-primary rounded-circle mb-3"> *@
  @*           <span class="small font-weight-semi-bold btn-icon__inner">01.</span> *@
  @*         </span> *@
  @*         <h2 class="h4 font-weight-semi-bold text-primary">Cost effective</h2> *@
  @*         <p class="mb-0">Our plans are technically limitless.. You don't have to pay any overcharge because *@
  @*           there isn't one!</p> *@
  @*       </div> *@
  @*       <!-- End Title --> *@
  @*     </div> *@
  @* *@
  @*     <div id="SVGmarketingStrategy" class="col-lg-7 svg-preloader"> *@
  @*       <!-- SVG Icon --> *@
  @*       <figure class="ie-marketing-strategy"> *@
  @*         <img class="js-svg-injector" src="../../assets/svg/illustrations/marketing-strategy.svg" alt="Image Description" *@
  @*              data-parent="#SVGmarketingStrategy"> *@
  @*       </figure> *@
  @*       <!-- End SVG Icon --> *@
  @*     </div> *@
  @*   </div> *@
  @* </div> *@
  @* *@
  @*   <div class="container space-1"> *@
  @*     <div class="row align-items-lg-center"> *@
  @*       <div class="col-lg-5 order-lg-2 mb-7 mb-lg-0"> *@
  @*         <!-- Title --> *@
  @*         <div class="pl-lg-4"> *@
  @*           <span class="btn btn-icon btn-soft-primary rounded-circle mb-3"> *@
  @*             <span class="small font-weight-semi-bold btn-icon__inner">02.</span> *@
  @*           </span> *@
  @*           <h2 class="h4 font-weight-semi-bold text-primary">Safe. Stable. Secure.</h2> *@
  @*           <p class="mb-0">Advanced distributed system architecture built to protect against DDoS and other potential  *@
  @*             threats. Security protocols are fully aligned and compliant with industry best practices.</p> *@
  @*         </div> *@
  @*         <!-- End Title --> *@
  @*       </div> *@
  @* *@
  @*       <div id="SVGappDevelopment" class="col-lg-7 order-lg-1 svg-preloader"> *@
  @*         <!-- SVG Icon --> *@
  @*         <figure class="ie-app-development"> *@
  @*           <img class="js-svg-injector" src="../../assets/svg/illustrations/app-development.svg" alt="SVG Illustration" *@
  @*                data-parent="#SVGappDevelopment"> *@
  @*         </figure> *@
  @*         <!-- End SVG Icon --> *@
  @*       </div> *@
  @*     </div> *@
  @*   </div> *@
  @* *@
  @*   <div class="container space-2 space-md-3"> *@
  @*     <div class="row align-items-lg-center"> *@
  @*       <div class="col-lg-5 mb-7 mb-lg-0"> *@
  @*         <div class="pr-lg-4"> *@
  @*           <span class="btn btn-icon btn-soft-primary rounded-circle mb-3"> *@
  @*             <span class="small font-weight-semi-bold btn-icon__inner">03.</span> *@
  @*           </span> *@
  @*           <h2 class="h4 font-weight-semi-bold text-primary">Analyse the history.</h2> *@
  @*           <p class="mb-0">Nozomi provides a handful of nifty features that will empower you to create powerful *@
  @*             analytical results to help with your business based on the historical data we've obtained.</p> *@
  @*         </div> *@
  @*       </div> *@
  @* *@
  @*       <div id="SVGbusinessAnalysis" class="col-lg-7 svg-preloader"> *@
  @*         <figure class="ie-business-analysis"> *@
  @*           <img class="js-svg-injector" src="../../assets/svg/illustrations/business-analysis.svg" alt="SVG Illustration" *@
  @*                data-parent="#SVGbusinessAnalysis"> *@
  @*         </figure> *@
  @*       </div> *@
  @*     </div> *@
  @*   </div> *@
  
@section Scripts
{
  <script>
    const vm = new Vue({
      // options
      el: "#vueTableBody",
      // Just dish any random variable in for now
      data: {
        currencyDataFields: [
          {
            key: 'name',
            label: 'Name',
            sortable: true
          },
          {
            key: 'marketCap',
            label: 'Market Cap',
            sortable: true
          },
          {
            key: 'averagePrice',
            label: 'Price',
            sortable: true
          },
          {
            key: 'dailyAvgPricePctChange',
            label: 'Daily Change',
            sortable: true
          },
//          {
//            key: 'lastUpdated',
//            label: 'Last Updated',
//            sortable: false
//          }
          {
            key: 'averagePriceHistory',
            label: 'Price',
            sortable: false
          }
        ],
        currentCurrencyPage: 1,
        currencies: [],
        itemsPerPage: 40,
        testCurrencies: [ { "averagePrice": 137.675, "dailyAvgPricePctChange": -0.014524855659246886, "marketCap": 14507353704.477655, "historical": null, "averagePriceHistory": [ 137.695, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675, 137.675 ], "name": "Ethereum", "abbreviation": "ETH", "lastUpdated": "2019-03-24T22:15:05.246764Z" }, { "averagePrice": 0.26909, "dailyAvgPricePctChange": 0.057634744454979826, "marketCap": 28338733.746240772, "historical": null, "averagePriceHistory": [ 0.268935, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909, 0.26909 ], "name": "Kyber Network Crystal", "abbreviation": "KNC", "lastUpdated": "2019-03-24T22:15:05.542046Z" }, { "averagePrice": 3986.3764832, "dailyAvgPricePctChange": -0.0006139827692106448, "marketCap": 70185487772.09404, "historical": null, "averagePriceHistory": null, "name": "Bitcoin", "abbreviation": "BTC", "lastUpdated": "2019-03-24T22:15:05.643578Z" }, { "averagePrice": 0, "dailyAvgPricePctChange": 0, "marketCap": 0, "historical": null, "averagePriceHistory": null, "name": "Bytecoin", "abbreviation": "BCN", "lastUpdated": "2019-03-24T22:15:05.759445Z" }, { "averagePrice": 0, "dailyAvgPricePctChange": 0, "marketCap": 0, "historical": null, "averagePriceHistory": null, "name": "BitShares", "abbreviation": "BTS", "lastUpdated": "2019-03-24T22:15:05.786368Z" } ]
      },
      created: function() {
        const connection = new SignalR.HubConnectionBuilder()
          .withUrl("/ticker")
          .build();
            
        // https://github.com/aspnet/SignalR/issues/3294
        connection.start().then(() => {
          connection.invoke("Subscribe", 2).catch(err => console.error(err.toString()));
        }).catch(err => document.write(err));

        function start() {
          try {
            connection.start();
            console.log('connected');
          } catch (err) {
            console.log(err);
            setTimeout(() => start(), 5000);
          }
        };

        connection.onclose(() => {
          start();
        });
        
        connection.on("currencies",
          (currencies) => {
            this.currencies = currencies;
          });
      },
      methods: {
        // This function provides the capability of updating the tickerData array.
        // It does NOT delete deprecated rows. After all, we expect the clients to refresh once a week or so.
//        updateTickerData: function(incomingData) {
//          // Iterate all incoming datum
//          $.each(incomingData, function(incomingDatum) {
//            // Look for the ticker datum in question
//            for (let i = 0; i < this.tickerData.length; i++) {
//              // Found matching ticker
//              if (this.tickerData[i].currencyPairId === incomingDatum.currencyPairId) {
//                // Tell them its updated
//                if (this.tickerData[i].lastUpdated) {
//                  // Bring in data
//                  
//                  
//                  this.tickerData[i].lastUpdated = moment();
//                } else {
//                  // Else we don't have to update... lol
//                }
//                break;
//              }
//            }
//          });
//        }
      },
      mounted: function() {
      }
    });
  </script>
}
